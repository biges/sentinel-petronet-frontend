{"remainingRequest":"/Users/halilibrahimguneri/Biges/sentinel-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/halilibrahimguneri/Biges/sentinel-frontend/src/views/Premises/premises.vue?vue&type=style&index=0&id=0c604d25&lang=scss&scoped=true&","dependencies":[{"path":"/Users/halilibrahimguneri/Biges/sentinel-frontend/src/views/Premises/premises.vue","mtime":1639418467753},{"path":"/Users/halilibrahimguneri/Biges/sentinel-frontend/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/halilibrahimguneri/Biges/sentinel-frontend/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/halilibrahimguneri/Biges/sentinel-frontend/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/halilibrahimguneri/Biges/sentinel-frontend/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/halilibrahimguneri/Biges/sentinel-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/halilibrahimguneri/Biges/sentinel-frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgouY29udGFpbmVyIHsKICBkaXNwbGF5OiBmbGV4ICFpbXBvcnRhbnQ7CiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjsKICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW4gIWltcG9ydGFudDsKICBtYXJnaW4tbGVmdDogMTVweDsKICBtaW4taGVpZ2h0OiAxMDB2aDsKICAuY29udGVudCB7CiAgICBtYXgtd2lkdGg6IDEwMCU7CiAgICBkaXNwbGF5OiBmbGV4OwogICAgZmxleC1kaXJlY3Rpb246IHJvdzsKICAgIC5kYXRhLWxheWVyIHsKICAgICAgbWF4LXdpZHRoOiA3MCU7CiAgICB9CiAgICAvLyAudGFiLXBhZ2UgewogICAgLy8gICBtYXgtd2lkdGg6IDMwJTsKICAgIC8vIH0KICB9CiAgLmJvdHRvbSB7CiAgICBwYWRkaW5nOiAxNXB4OwogICAgbWluLWhlaWdodDogNTBweDsKICAgIGJhY2tncm91bmQ6IHJnYmEoMTYwLCAxNjAsIDE2MCwgMC4xKTsKICB9Cn0K"},{"version":3,"sources":["premises.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"premises.vue","sourceRoot":"src/views/Premises","sourcesContent":["<template>\n  <div class=\"container\">\n    <PremiseFilter\n      @onPremiseFilteredData=\"handlePremiseFilteredData\"\n    ></PremiseFilter>\n    <div class=\"content\">\n      <DataTable :data=\"table_data\" class=\"data-layer\"></DataTable>\n      <TabPage class=\"tab-page\"></TabPage>\n    </div>\n    <DataTablePagination\n      @onChangeCurrentPage=\"handleChangePagination\"\n      @onChangeSize=\"handleChangePagination\"\n      class=\"bottom\"\n    ></DataTablePagination>\n  </div>\n</template>\n\n<script>\nimport DataTable from '@/components/atomic/data-table.vue'\nimport TabPage from '@/components/atomic/premises/tab-page.vue'\nimport PremiseFilter from '@/components/premises/premise-filter.vue'\nimport DataTablePagination from '@/components/atomic/data-table-pagination.vue'\nimport { mapActions, mapGetters } from 'vuex'\n\nexport default {\n  name: 'Premises',\n  components: {\n    DataTable,\n    PremiseFilter,\n    TabPage,\n    DataTablePagination\n  },\n  data() {\n    return {\n      table_data: []\n    }\n  },\n  computed: {\n    ...mapGetters({\n      getCurrentPage: 'pagination/getCurrentPage',\n      getCurrentLimit: 'pagination/getCurrentLimit'\n    })\n  },\n  methods: {\n    ...mapActions({\n      getPremise: 'premise/getPremise',\n      getPremises: 'premise/getPremises',\n      createPremise: 'premise/createPremise',\n      setSelectedRow: 'dataTable/setSelectedRow'\n    }),\n    handleChangePagination(val) {\n      console.log('Pagination Triggered', this.getCurrentPage)\n      console.log('Pagination Triggered', this.getCurrentLimit)\n      this.fillDataTable({\n        page: this.getCurrentPage,\n        limit: this.getCurrentLimit\n      })\n    },\n    handlePremiseFilteredData(val) {\n      this.fillDataTable(val)\n    },\n    async fillDataTable(params) {\n      let listPremises = this.getPremises({\n        page: this.getCurrentPage,\n        limit: this.getCurrentLimit,\n        ...params\n      })\n      await listPremises.then((r) => {\n        this.table_data = r\n        console.log(this.table_data)\n      })\n    }\n  },\n  created() {\n    this.fillDataTable()\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.container {\n  display: flex !important;\n  flex-direction: column;\n  justify-content: space-between !important;\n  margin-left: 15px;\n  min-height: 100vh;\n  .content {\n    max-width: 100%;\n    display: flex;\n    flex-direction: row;\n    .data-layer {\n      max-width: 70%;\n    }\n    // .tab-page {\n    //   max-width: 30%;\n    // }\n  }\n  .bottom {\n    padding: 15px;\n    min-height: 50px;\n    background: rgba(160, 160, 160, 0.1);\n  }\n}\n</style>\n"]}]}