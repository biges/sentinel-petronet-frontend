{"remainingRequest":"/Users/halilibrahimguneri/Biges/sentinel-frontend/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/halilibrahimguneri/Biges/sentinel-frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/halilibrahimguneri/Biges/sentinel-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/halilibrahimguneri/Biges/sentinel-frontend/src/components/atomic/data-table.vue?vue&type=template&id=6f885aef&","dependencies":[{"path":"/Users/halilibrahimguneri/Biges/sentinel-frontend/src/components/atomic/data-table.vue","mtime":1635753564600},{"path":"/Users/halilibrahimguneri/Biges/sentinel-frontend/node_modules/cache-loader/dist/cjs.js","mtime":1635753868455},{"path":"/Users/halilibrahimguneri/Biges/sentinel-frontend/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1635753858190},{"path":"/Users/halilibrahimguneri/Biges/sentinel-frontend/node_modules/cache-loader/dist/cjs.js","mtime":1635753868455},{"path":"/Users/halilibrahimguneri/Biges/sentinel-frontend/node_modules/vue-loader/lib/index.js","mtime":1635753858171}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}