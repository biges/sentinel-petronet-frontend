{"remainingRequest":"/Users/halilibrahimguneri/Biges/sentinel-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/halilibrahimguneri/Biges/sentinel-frontend/src/components/premises/premise-devices.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/halilibrahimguneri/Biges/sentinel-frontend/src/components/premises/premise-devices.vue","mtime":1639418467749},{"path":"/Users/halilibrahimguneri/Biges/sentinel-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/halilibrahimguneri/Biges/sentinel-frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/halilibrahimguneri/Biges/sentinel-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/halilibrahimguneri/Biges/sentinel-frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IGJ1cyB9IGZyb20gJ0AvbWFpbi5qcycKLy8gaW1wb3J0IHsgUFJFTUlTRV9ERVZJQ0VTIH0gZnJvbSAiQC9jb25zdGFudCI7CmltcG9ydCBEZXZpY2VDYXJkIGZyb20gJ0AvY29tcG9uZW50cy9wcmVtaXNlcy9kZXZpY2UtY2FyZCcKaW1wb3J0IHsgbWFwR2V0dGVycywgbWFwQWN0aW9ucyB9IGZyb20gJ3Z1ZXgnCgpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ1ByZW1pc2VEZXZpY2VzJywKICBjb21wb25lbnRzOiB7CiAgICBEZXZpY2VDYXJkCiAgfSwKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgZGV2aWNlczogW10sCiAgICAgIHNlbGVjdGVkRGV2aWNlOiBudWxsCiAgICB9CiAgfSwKICBjb21wdXRlZDogewogICAgLi4ubWFwR2V0dGVycyh7CiAgICAgIGdldFNlbGVjdGVkUm93OiAnZGF0YVRhYmxlL2dldFNlbGVjdGVkUm93JwogICAgfSksCiAgICBJc093bkRldmljZSgpIHsKICAgICAgcmV0dXJuIHRoaXMuZGV2aWNlcyB8fCB0aGlzLmRldmljZXMgIT0gbnVsbCA/IHRydWUgOiBmYWxzZQogICAgfQogIH0sCiAgbWV0aG9kczogewogICAgLi4ubWFwQWN0aW9ucyh7CiAgICAgIGdldFByZW1pc2VEZXZpY2U6ICdwcmVtaXNlL2dldFByZW1pc2VEZXZpY2UnCiAgICB9KSwKICAgIGhhbmRsZUNvbnRhaW5lckNsaWNrKGUpIHsKICAgICAgaWYgKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdjYXJkJykuY29udGFpbnMoZS50YXJnZXQpKSB7CiAgICAgICAgY29uc29sZS5sb2codGhpcy5zZWxlY3RlZERldmljZSkKICAgICAgfSBlbHNlIHsKICAgICAgICBjb25zb2xlLmxvZyh0aGlzLnNlbGVjdGVkRGV2aWNlKQogICAgICAgIHRoaXMuc2VsZWN0ZWREZXZpY2UgPSBudWxsCiAgICAgIH0KICAgICAgY29uc29sZS5sb2coZSkKICAgICAgY29uc29sZS5sb2coJ0NvbnRhaW5lciBDbGljaycpCiAgICB9LAogICAgaGFuZGxlQ3JlYXRlRGV2aWNlKCkgewogICAgICBjb25zb2xlLmxvZyh0aGlzLmdldFNlbGVjdGVkUm93LmlkKQogICAgICB0aGlzLiRyb3V0ZXIucHVzaCh7CiAgICAgICAgbmFtZTogJ0NyZWF0ZURldmljZScsCiAgICAgICAgcGFyYW1zOiB7IHByZW1pc2VfaWQ6IHRoaXMuZ2V0U2VsZWN0ZWRSb3cuaWQgfQogICAgICB9KQogICAgfSwKICAgIGhhbmRsZVVwZGF0ZSgpIHsKICAgICAgdGhpcy4kcm91dGVyLnB1c2goewogICAgICAgIG5hbWU6ICdVcGRhdGVEZXZpY2UnLAogICAgICAgIHBhcmFtczogewogICAgICAgICAgZGV2aWNlX2lkOiB0aGlzLnNlbGVjdGVkRGV2aWNlLAogICAgICAgICAgcHJlbWlzZV9pZDogdGhpcy5nZXRTZWxlY3RlZFJvdy5pZAogICAgICAgIH0KICAgICAgfSkKICAgIH0sCiAgICBoYW5kbGVTZWxlY3RlZERldmljZShkZXZpY2VfaWQpIHsKICAgICAgdGhpcy5zZWxlY3RlZERldmljZSA9IGRldmljZV9pZAogICAgfSwKICAgIGFzeW5jIGhhbmRsZUN1cnJlbnRDaGFuZ2VSb3dQcmVtaXNlKHZhbCkgewogICAgICB0aGlzLmRldmljZXMgPSBbXQogICAgICBjb25zb2xlLmxvZyh2YWwpCiAgICAgIGxldCBkZXZpY2VzID0gdGhpcy5nZXRQcmVtaXNlRGV2aWNlKHZhbCkKICAgICAgYXdhaXQgZGV2aWNlcy50aGVuKChyKSA9PiB7CiAgICAgICAgY29uc29sZS5sb2coJ0RFdmljZXMnLCByKQogICAgICAgIHRoaXMuZGV2aWNlcyA9IHIKICAgICAgICB0aGlzLnNlbGVjdGVkRGV2aWNlID0gdGhpcy5kZXZpY2VzWzBdLmlkCiAgICAgIH0pCiAgICB9CiAgfSwKCiAgbW91bnRlZCgpIHsKICAgIGJ1cy4kb24oJ29uQ3VycmVudENoYW5nZVJvd1ByZW1pc2UnLCAodmFsKSA9PiB7CiAgICAgIHRoaXMuaGFuZGxlQ3VycmVudENoYW5nZVJvd1ByZW1pc2UodmFsLmlkKQogICAgICAvLyB0aGlzLmhhbmRsZUN1cnJlbnRDaGFuZ2VSb3dQcmVtaXNlKHRoaXMucHJlbWlzZV9pZCk7CiAgICB9KQogIH0KfQo="},{"version":3,"sources":["premise-devices.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAyBA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","file":"premise-devices.vue","sourceRoot":"src/components/premises","sourcesContent":["<template>\n  <div @click=\"handleContainerClick\" class=\"devices-content\">\n    <div id=\"card\" class=\"card\" v-if=\"IsOwnDevice\">\n      <DeviceCard\n        v-for=\"device in devices\"\n        :key=\"device.id\"\n        :data=\"device\"\n        @selectedDevice=\"handleSelectedDevice\"\n        :selected_device_id=\"selectedDevice\"\n      ></DeviceCard>\n    </div>\n    <span v-else>İlgili mekanda herhangi bir cihaz kaydı bulunmamaktadır.</span>\n    <!-- <div class=\"sentinel-location-bottom\"> -->\n    <div class=\"devices-bottom\">\n      <el-button :disabled=\"!selectedDevice\" @click=\"handleUpdate()\"\n        >DÜZENLE</el-button\n      >\n      <el-button :disabled=\"!!selectedDevice\" @click=\"handleCreateDevice()\"\n        >YENİ EKLE</el-button\n      >\n    </div>\n  </div>\n</template>\n\n<script>\nimport { bus } from '@/main.js'\n// import { PREMISE_DEVICES } from \"@/constant\";\nimport DeviceCard from '@/components/premises/device-card'\nimport { mapGetters, mapActions } from 'vuex'\n\nexport default {\n  name: 'PremiseDevices',\n  components: {\n    DeviceCard\n  },\n  data() {\n    return {\n      devices: [],\n      selectedDevice: null\n    }\n  },\n  computed: {\n    ...mapGetters({\n      getSelectedRow: 'dataTable/getSelectedRow'\n    }),\n    IsOwnDevice() {\n      return this.devices || this.devices != null ? true : false\n    }\n  },\n  methods: {\n    ...mapActions({\n      getPremiseDevice: 'premise/getPremiseDevice'\n    }),\n    handleContainerClick(e) {\n      if (document.getElementById('card').contains(e.target)) {\n        console.log(this.selectedDevice)\n      } else {\n        console.log(this.selectedDevice)\n        this.selectedDevice = null\n      }\n      console.log(e)\n      console.log('Container Click')\n    },\n    handleCreateDevice() {\n      console.log(this.getSelectedRow.id)\n      this.$router.push({\n        name: 'CreateDevice',\n        params: { premise_id: this.getSelectedRow.id }\n      })\n    },\n    handleUpdate() {\n      this.$router.push({\n        name: 'UpdateDevice',\n        params: {\n          device_id: this.selectedDevice,\n          premise_id: this.getSelectedRow.id\n        }\n      })\n    },\n    handleSelectedDevice(device_id) {\n      this.selectedDevice = device_id\n    },\n    async handleCurrentChangeRowPremise(val) {\n      this.devices = []\n      console.log(val)\n      let devices = this.getPremiseDevice(val)\n      await devices.then((r) => {\n        console.log('DEvices', r)\n        this.devices = r\n        this.selectedDevice = this.devices[0].id\n      })\n    }\n  },\n\n  mounted() {\n    bus.$on('onCurrentChangeRowPremise', (val) => {\n      this.handleCurrentChangeRowPremise(val.id)\n      // this.handleCurrentChangeRowPremise(this.premise_id);\n    })\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n@import '@/assets/scss/style.scss';\n.devices-content {\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  height: 708px;\n  border: 1px solid black;\n  border-top: 1px solid transparent;\n  border-radius: 0px 0px 0px 10px;\n  background-color: $hybrone_background_color;\n  .card {\n    overflow: auto;\n    background-color: $hybrone_background_color;\n  }\n  span {\n    @extend .sentinel-label;\n    align-self: center;\n    margin-top: 30%;\n    margin-bottom: 100%;\n  }\n  .devices-title {\n    display: flex;\n    justify-content: flex-start;\n    margin: 29px 0px 15px 22px;\n  }\n}\n.devices-bottom {\n  display: flex;\n  align-items: flex-end;\n  flex-direction: row;\n  justify-content: space-between;\n  margin-bottom: 23px;\n  margin-top: 20px;\n  background-color: $hybrone_background_color;\n  button {\n    @extend .sentinel-button__settings;\n    &:nth-child(2n + 1) {\n      background-color: $hybrone_background_color;\n      &:disabled {\n        background-color: $hybrone_disabled_color;\n        color: $hybrone_background_color;\n      }\n    }\n    &:nth-child(2n) {\n      color: #fff;\n      &:hover {\n        border-color: $hybrone_border_color;\n        color: $hybrone_light_blue;\n        background-color: $hybrone_background_color;\n      }\n      &:disabled {\n        background-color: $hybrone_disabled_color;\n        color: $hybrone_background_color;\n      }\n    }\n  }\n}\n</style>\n"]}]}