{"remainingRequest":"/Users/halilibrahimguneri/Biges/sentinel-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/halilibrahimguneri/Biges/sentinel-frontend/src/components/device-details/hap/device-last-signals.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/halilibrahimguneri/Biges/sentinel-frontend/src/components/device-details/hap/device-last-signals.vue","mtime":1637740674009},{"path":"/Users/halilibrahimguneri/Biges/sentinel-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/halilibrahimguneri/Biges/sentinel-frontend/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/halilibrahimguneri/Biges/sentinel-frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/halilibrahimguneri/Biges/sentinel-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/halilibrahimguneri/Biges/sentinel-frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IG1hcEFjdGlvbnMsIG1hcEdldHRlcnMgfSBmcm9tICJ2dWV4IjsKaW1wb3J0IERhdGFUYWJsZSBmcm9tICJAL2NvbXBvbmVudHMvYXRvbWljL2RhdGEtdGFibGUudnVlIjsKaW1wb3J0IERhdGFUYWJsZVBhZ2luYXRpb24gZnJvbSAiQC9jb21wb25lbnRzL2F0b21pYy9kYXRhLXRhYmxlLXBhZ2luYXRpb24udnVlIjsKaW1wb3J0IERldmljZURldGFpbHNMYXN0U2lnbmFsc0ZpbHRlciBmcm9tICJAL2NvbXBvbmVudHMvZGV2aWNlLWRldGFpbHMvaGFwL2RldGFpbHMtbGFzdC1zaWduYWxzLWZpbHRlci52dWUiOwoKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICJEZXZpY2VMYXN0U2lnbmFscyIsCiAgY29tcG9uZW50czogewogICAgRGF0YVRhYmxlLAogICAgRGF0YVRhYmxlUGFnaW5hdGlvbiwKICAgIERldmljZURldGFpbHNMYXN0U2lnbmFsc0ZpbHRlciwKICB9LAogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBkYXRhOiBbXSwKCQlkZXZpY2VfaWQ6dGhpcy4kcm91dGUucGFyYW1zLmRldmljZV9pZCwKICAgICAgZmlsdGVyZWRfZGF0YToge30sCiAgICB9OwogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIC4uLm1hcEdldHRlcnMoewogICAgICBnZXRDdXJyZW50UGFnZTogInBhZ2luYXRpb24vZ2V0Q3VycmVudFBhZ2UiLAogICAgICBnZXRDdXJyZW50TGltaXQ6ICJwYWdpbmF0aW9uL2dldEN1cnJlbnRMaW1pdCIsCiAgICB9KSwKICB9LAogIG1ldGhvZHM6IHsKICAgIC4uLm1hcEFjdGlvbnMoewogICAgICBnZXRQcm9zZWNEZXZpY2VMYXN0U2lnbmFsczogImRldmljZS9nZXRQcm9zZWNEZXZpY2VMYXN0U2lnbmFscyIsCiAgICB9KSwKICAgIGhhbmRsZUNoYW5nZVBhZ2luYXRpb24oKSB7CiAgICAgIHRoaXMuZGF0YSA9IFtdOwoJLy8gCU9iamVjdC5rZXlzKHRoaXMuZmlsdGVyRGF0YSkuZm9yRWFjaCgoaXRlbSkgPT4gewogICAgLy8gICAgIGlmICh0aGlzLmZpbHRlckRhdGFbaXRlbV0gPT0gIiIpIGRlbGV0ZSB0aGlzLmZpbHRlckRhdGFbaXRlbV07CiAgICAvLyB9KTsKICAgICAgdGhpcy5nZXRQcm9zZWNEZXZpY2VTaWduYWxzSGlzdG9yeSh7CiAgICAgICAgcGFnZTogdGhpcy5nZXRDdXJyZW50UGFnZSwKICAgICAgICBsaW1pdDogdGhpcy5nZXRDdXJyZW50TGltaXQsCiAgICAgICAgLi4udGhpcy5maWx0ZXJEYXRhLAogICAgICB9KTsKICAgIH0sCiAgICBoYW5kbGVGaWx0ZXJlZERhdGEocGF5bG9hZCkgewogICAgICB0aGlzLmRhdGEgPSBbXTsKICAgICAgdGhpcy5maWx0ZXJlZF9kYXRhID0ge3BhZ2U6MSwgbGltaXQ6IDIwICwuLi5wYXlsb2FkfTsKICAgICAgdGhpcy4kZW1pdCgiZmlsdGVyRGF0YSIsIHRoaXMuZmlsdGVyZWRfZGF0YSk7CiAgICAvLyAgIGNvbnNvbGUubG9nKCJmaWx0ZXJEYXRhIiwgdGhpcy5maWx0ZXJlZF9kYXRhKTsKICAgICAgdGhpcy5nZXRQcm9zZWNEZXZpY2VTaWduYWxzSGlzdG9yeShwYXlsb2FkKTsKICAgIH0sCiAgICBnZXRQcm9zZWNEZXZpY2VTaWduYWxzSGlzdG9yeShwYXlsb2FkKSB7CiAgICAgIGxldCBkZXZpY2Vfc2lnbmFscyA9IHRoaXMuZ2V0UHJvc2VjRGV2aWNlTGFzdFNpZ25hbHMoewogICAgICAgIGRldmljZV9pZDogdGhpcy5kZXZpY2VfaWQsCiAgICAgICAgLi4ucGF5bG9hZCwKICAgICAgfSk7CiAgICAgIGRldmljZV9zaWduYWxzLnRoZW4oKHIpID0+IHsKICAgICAgICBjb25zb2xlLmxvZygiTGFzdCBTaWduYWxzIiwgcik7CiAgICAgICAgdGhpcy5kYXRhID0gcjsKICAgICAgfSk7CiAgICB9LAogIH0sCiAgY3JlYXRlZCgpIHsKCS8vICAgdGhpcy5kZXZpY2VfaWQgPSB0aGlzLiRyb3V0ZS5wYXJhbXMuZGV2aWNlX2lkOwogIH0sCiAgbW91bnRlZCgpIHsKICAgIC8vIGNvbnNvbGUubG9nKCJtb3VudGVkIGxhc3Qgc2lnbmFscyIpOwogICAgdGhpcy5nZXRQcm9zZWNEZXZpY2VTaWduYWxzSGlzdG9yeSgpOwogIH0sCn07Cg=="},{"version":3,"sources":["device-last-signals.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;AAeA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"device-last-signals.vue","sourceRoot":"src/components/device-details/hap","sourcesContent":["<template>\n  <div class=\"container\">\n    <DeviceDetailsLastSignalsFilter\n      @onFilteredData=\"handleFilteredData\"\n    ></DeviceDetailsLastSignalsFilter>\n    <DataTable :data=\"data\"></DataTable>\n    <DataTablePagination\n      @onChangeCurrentPage=\"handleChangePagination\"\n      @onChangeSize=\"handleChangePagination\"\n      class=\"bottom\"\n    ></DataTablePagination>\n  </div>\n</template>\n\n<script>\nimport { mapActions, mapGetters } from \"vuex\";\nimport DataTable from \"@/components/atomic/data-table.vue\";\nimport DataTablePagination from \"@/components/atomic/data-table-pagination.vue\";\nimport DeviceDetailsLastSignalsFilter from \"@/components/device-details/hap/details-last-signals-filter.vue\";\n\nexport default {\n  name: \"DeviceLastSignals\",\n  components: {\n    DataTable,\n    DataTablePagination,\n    DeviceDetailsLastSignalsFilter,\n  },\n  data() {\n    return {\n      data: [],\n\t\tdevice_id:this.$route.params.device_id,\n      filtered_data: {},\n    };\n  },\n  computed: {\n    ...mapGetters({\n      getCurrentPage: \"pagination/getCurrentPage\",\n      getCurrentLimit: \"pagination/getCurrentLimit\",\n    }),\n  },\n  methods: {\n    ...mapActions({\n      getProsecDeviceLastSignals: \"device/getProsecDeviceLastSignals\",\n    }),\n    handleChangePagination() {\n      this.data = [];\n\t// \tObject.keys(this.filterData).forEach((item) => {\n    //     if (this.filterData[item] == \"\") delete this.filterData[item];\n    // });\n      this.getProsecDeviceSignalsHistory({\n        page: this.getCurrentPage,\n        limit: this.getCurrentLimit,\n        ...this.filterData,\n      });\n    },\n    handleFilteredData(payload) {\n      this.data = [];\n      this.filtered_data = {page:1, limit: 20 ,...payload};\n      this.$emit(\"filterData\", this.filtered_data);\n    //   console.log(\"filterData\", this.filtered_data);\n      this.getProsecDeviceSignalsHistory(payload);\n    },\n    getProsecDeviceSignalsHistory(payload) {\n      let device_signals = this.getProsecDeviceLastSignals({\n        device_id: this.device_id,\n        ...payload,\n      });\n      device_signals.then((r) => {\n        console.log(\"Last Signals\", r);\n        this.data = r;\n      });\n    },\n  },\n  created() {\n\t//   this.device_id = this.$route.params.device_id;\n  },\n  mounted() {\n    // console.log(\"mounted last signals\");\n    this.getProsecDeviceSignalsHistory();\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.container {\n  justify-content: space-between !important;\n  height: 75vh;\n  box-sizing: border-box;\n  display: flex;\n  flex-direction: column;\n\n  // padding: 0px 0px 0px 13px;\n  .bottom {\n    position: relative;\n    padding: 34px;\n    min-height: 25px;\n    background: rgba(160, 160, 160, 0.1);\n  }\n}\n</style>\n"]}]}