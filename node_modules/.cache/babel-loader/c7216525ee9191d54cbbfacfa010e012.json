{"remainingRequest":"/Users/halilibrahimguneri/Biges/sentinel-frontend/node_modules/babel-loader/lib/index.js!/Users/halilibrahimguneri/Biges/sentinel-frontend/node_modules/eslint-loader/index.js??ref--13-0!/Users/halilibrahimguneri/Biges/sentinel-frontend/src/middleware/index.js","dependencies":[{"path":"/Users/halilibrahimguneri/Biges/sentinel-frontend/src/middleware/index.js","mtime":1639036167638},{"path":"/Users/halilibrahimguneri/Biges/sentinel-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/halilibrahimguneri/Biges/sentinel-frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/halilibrahimguneri/Biges/sentinel-frontend/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5mb3ItZWFjaC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmluY2x1ZGVzLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLmluY2x1ZGVzLmpzIjsKaW1wb3J0IFZ1ZSBmcm9tICd2dWUnOwppbXBvcnQgYXhpb3MgZnJvbSAnYXhpb3MnOwppbXBvcnQgcm91dGVyIGZyb20gJ0Avcm91dGVyJzsKaW1wb3J0IHN0b3JlIGZyb20gJy4uL3N0b3JlJzsKaW1wb3J0IFFzIGZyb20gJ3FzJzsKaW1wb3J0IGxlYWZsZXQgZnJvbSAnbGVhZmxldCc7IC8vIGltcG9ydCBsZWFmbGV0X2NsdXN0ZXIgZnJvbSAibGVhZmxldC5tYXJrZXJjbHVzdGVyIjsKCnZhciBjbGllbnRJbnN0YW5jZSA9IGZ1bmN0aW9uIGNsaWVudEluc3RhbmNlKGJhc2VVUkwpIHsKICByZXR1cm4gYXhpb3MuY3JlYXRlKHsKICAgIGJhc2VVUkw6IGJhc2VVUkwsCiAgICBoZWFkZXJzOiB7CiAgICAgICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbicKICAgIH0sCiAgICB0aW1lb3V0OiAxNTAwMCwKICAgIHBhcmFtc1NlcmlhbGl6ZXI6IGZ1bmN0aW9uIHBhcmFtc1NlcmlhbGl6ZXIocGFyYW1zKSB7CiAgICAgIHJldHVybiBRcy5zdHJpbmdpZnkocGFyYW1zLCB7CiAgICAgICAgc2tpcE51bGxzOiB0cnVlLAogICAgICAgIGFycmF5Rm9ybWF0OiAncmVwZWF0JwogICAgICB9KTsKICAgIH0KICB9KTsKfTsgLy8gY29uc3QgY3ljbG9wcyA9IGNsaWVudEluc3RhbmNlKCdodHRwOi8vMTkyLjE2OC4zLjE5OTozMDAwL2FwaS92MS8nKQoKCnZhciBjeWNsb3BzID0gY2xpZW50SW5zdGFuY2UoJ2h0dHA6Ly8zNC4xNDAuMjI0LjIyOjMwMDAvYXBpL3YxLycpOwp2YXIgbWFwID0gJ2h0dHA6Ly8xOTIuMTY4LjMuMjAyOjgwODEvdGlsZS97en0ve3h9L3t5fS5wbmcnOwp2YXIgY2xpZW50cyA9IFtjeWNsb3BzXTsKY2xpZW50cy5mb3JFYWNoKGZ1bmN0aW9uIChjbGllbnQpIHsKICBjbGllbnQuaW50ZXJjZXB0b3JzLnJlcXVlc3QudXNlKGZ1bmN0aW9uIChjb25maWcpIHsKICAgIGNvbmZpZy5oZWFkZXJzWydMb2dpbi1UeXBlJ10gPSAnYWNjb3VudCc7CgogICAgaWYgKCFjb25maWcudXJsLmluY2x1ZGVzKCd0b2tlbicpKSB7CiAgICAgIHZhciB0b2tlbiA9IHN0b3JlLnN0YXRlLmF1dGgudXNlci50b2tlbjsKICAgICAgY29uZmlnLmhlYWRlcnNbJ0F1dGhvcml6YXRpb24nXSA9ICJCZWFyZXIgIi5jb25jYXQodG9rZW4pOwogICAgfQoKICAgIHJldHVybiBjb25maWc7CiAgfSk7CiAgY2xpZW50LmludGVyY2VwdG9ycy5yZXNwb25zZS51c2UoZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICB2YXIgX3Jlc3BvbnNlJGRhdGEgPSByZXNwb25zZS5kYXRhLAogICAgICAgIG1lc3NhZ2UgPSBfcmVzcG9uc2UkZGF0YS5tZXNzYWdlLAogICAgICAgIHN0YXR1cyA9IF9yZXNwb25zZSRkYXRhLnN0YXR1czsKCiAgICBpZiAobWVzc2FnZSkgewogICAgICBWdWUubm90aWZ5KHsKICAgICAgICB0ZXh0OiBtZXNzYWdlLAogICAgICAgIGdyb3VwOiBzdGF0dXMgPyAnc3VjY2Vzcy10ZW1wbGF0ZScgOiAnZXJyb3ItdGVtcGxhdGUnLAogICAgICAgIHR5cGU6IHN0YXR1cyA/ICdzdWNjZXNzJyA6ICdlcnJvcicKICAgICAgfSk7CiAgICB9CgogICAgcmV0dXJuIHJlc3BvbnNlOwogIH0sIGZ1bmN0aW9uIChlcnJvcikgewogICAgdmFyIF9lcnJvciRyZXNwb25zZSA9IGVycm9yLnJlc3BvbnNlLAogICAgICAgIG1lc3NhZ2UgPSBfZXJyb3IkcmVzcG9uc2UuZGF0YS5tZXNzYWdlLAogICAgICAgIHVybCA9IF9lcnJvciRyZXNwb25zZS5jb25maWcudXJsLAogICAgICAgIHN0YXR1cyA9IF9lcnJvciRyZXNwb25zZS5zdGF0dXM7CgogICAgaWYgKG1lc3NhZ2UpIHsKICAgICAgVnVlLm5vdGlmeSh7CiAgICAgICAgdGV4dDogbWVzc2FnZSwKICAgICAgICBncm91cDogJ2Vycm9yLXRlbXBsYXRlJywKICAgICAgICB0eXBlOiAnZXJyb3InCiAgICAgIH0pOwogICAgfQoKICAgIGlmICh1cmwgIT0gJy9sb2dpbicgJiYgWzQwM10uaW5jbHVkZXMoc3RhdHVzKSkgewogICAgICByb3V0ZXIucHVzaCh7CiAgICAgICAgbmFtZTogJ0xvZ2luJwogICAgICB9KTsgLy8gc3RvcmUuZGlzcGF0Y2goImF1dGgvbG9nb3V0Iik7CiAgICB9CgogICAgcmV0dXJuIGVycm9yOwogIH0pOwp9KTsKZXhwb3J0IGRlZmF1bHQgewogIGluc3RhbGw6IGZ1bmN0aW9uIGluc3RhbGwoKSB7CiAgICBWdWVbJyRhcGknXSA9IGN5Y2xvcHM7CiAgICBWdWUucHJvdG90eXBlWyckYXBpJ10gPSBjeWNsb3BzOwogICAgVnVlLnByb3RvdHlwZVsnJG1hcCddID0gbWFwOwogICAgVnVlLnByb3RvdHlwZVsnJGxlYWZsZXQnXSA9IGxlYWZsZXQ7CiAgfQp9Ow=="},{"version":3,"sources":["/Users/halilibrahimguneri/Biges/sentinel-frontend/src/middleware/index.js"],"names":["Vue","axios","router","store","Qs","leaflet","clientInstance","baseURL","create","headers","timeout","paramsSerializer","params","stringify","skipNulls","arrayFormat","cyclops","map","clients","forEach","client","interceptors","request","use","config","url","includes","token","state","auth","user","response","data","message","status","notify","text","group","type","error","push","name","install","prototype"],"mappings":"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","sourcesContent":["import Vue from 'vue'\nimport axios from 'axios'\nimport router from '@/router'\nimport store from '../store'\nimport Qs from 'qs'\nimport leaflet from 'leaflet'\n// import leaflet_cluster from \"leaflet.markercluster\";\n\nconst clientInstance = (baseURL) =>\n  axios.create({\n    baseURL,\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    timeout: 15000,\n    paramsSerializer: (params) =>\n      Qs.stringify(params, {\n        skipNulls: true,\n        arrayFormat: 'repeat'\n      })\n  })\n// const cyclops = clientInstance('http://192.168.3.199:3000/api/v1/')\n\nconst cyclops = clientInstance('http://34.140.224.22:3000/api/v1/')\nconst map = 'http://192.168.3.202:8081/tile/{z}/{x}/{y}.png'\n\nconst clients = [cyclops]\n\nclients.forEach((client) => {\n  client.interceptors.request.use((config) => {\n    config.headers['Login-Type'] = 'account'\n\n    if (!config.url.includes('token')) {\n      let token = store.state.auth.user.token\n      config.headers['Authorization'] = `Bearer ${token}`\n    }\n\n    return config\n  })\n\n  client.interceptors.response.use(\n    (response) => {\n      const {\n        data: { message, status }\n      } = response\n\n      if (message) {\n        Vue.notify({\n          text: message,\n          group: status ? 'success-template' : 'error-template',\n          type: status ? 'success' : 'error'\n        })\n      }\n\n      return response\n    },\n    (error) => {\n      const {\n        response: {\n          data: { message },\n          config: { url },\n          status\n        }\n      } = error\n      if (message) {\n        Vue.notify({\n          text: message,\n          group: 'error-template',\n          type: 'error'\n        })\n      }\n\n      if (url != '/login' && [403].includes(status)) {\n        router.push({ name: 'Login' })\n        // store.dispatch(\"auth/logout\");\n      }\n      return error\n    }\n  )\n})\n\nexport default {\n  install() {\n    Vue['$api'] = cyclops\n    Vue.prototype['$api'] = cyclops\n    Vue.prototype['$map'] = map\n    Vue.prototype['$leaflet'] = leaflet\n  }\n}\n"]}]}